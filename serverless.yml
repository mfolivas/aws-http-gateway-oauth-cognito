service: http-api-node

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    DOMAIN_SUFFIX: mandalorian-jedi
  httpApi:
    authorizers:
      serviceAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: 
          Fn::Join:
          - ''
          - - 'https://cognito-idp.'
            - '${opt:region, self:provider.region}'
            - '.amazonaws.com/'
            - Ref: ServiceUserPool
        audience:
          - Ref: ServiceUserPoolClient
functions:
  getProfileInfo:
    handler: profile.get
    events:
      - httpApi:
            method: GET
            path: /users/profile
            authorizer: serviceAuthorizer
  createProfileInfo:
    handler: profile.post
    events:
      - httpApi:
            method: POST
            path: /users/profile
            authorizer: serviceAuthorizer

resources:
  Resources:
    HttpApi:
      DependsOn: ServiceUserPool

    ServiceUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: service-user-pool-${opt:stage, self:provider.stage}
        AdminCreateUserConfig: 
          AllowAdminCreateUserOnly: false  # Don't allow users to sign themselves up
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email

    UserPoolResourceServer:
      Type: AWS::Cognito::UserPoolResourceServer
      Properties:
        Identifier: users
        Name: User API
        UserPoolId:
          Ref: ServiceUserPool
        Scopes:
          - ScopeName: 'profile'
            ScopeDescription: 'Profile access'

    ServiceUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: service-user-pool-client-${opt:stage, self:provider.stage}
        AllowedOAuthFlows:
          - client_credentials
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - users/profile
        UserPoolId:
          Ref: ServiceUserPool
        CallbackURLs: 
          - https://localhost:3000
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: true
        SupportedIdentityProviders: 
          - COGNITO

    ServiceUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain 
      Properties:
        UserPoolId: 
          Ref: ServiceUserPool
        Domain: service-user-pool-domain-${opt:stage, self:provider.stage}-${self:provider.environment.DOMAIN_SUFFIX}
